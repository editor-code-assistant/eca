name: Tests

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'resources/ECA_VERSION'
      - 'docs/**'
      - 'images/**'
      - 'mkdocs.yml'
      - '.github/workflows/nightly.yml'
      - '.github/workflows/docs.yml'
      - '.github/workflows/release.yml'

  pull_request:

jobs:
  unit-test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        jdk: [17]
        include:
          - os: windows-latest
            jdk: 17
          - os: macos-latest
            jdk: 17
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.12.0.1530'
          bb: '1.12.200'

      - name: Run tests
        run: bb test
  jvm-integration-test:
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        jdk: [17]
        include:
          - os: windows-latest
            jdk: 17
          - os: macos-latest
            jdk: 17
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK ${{ matrix.jdk }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.jdk }}

      - name: Install clojure build tools
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.12.0.1530'
          bb: '1.12.200'

      - name: Generate embedded binary
        run: bb prod-cli

      - name: Run integration tests
        run: bb integration-test

  graalvm-build:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Install Clojure
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.12.0.1530'
          bb: '1.12.200'

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          native-image-musl: 'true'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build static Linux native image
        env:
          ECA_XMX: "-J-Xmx6g"
          ECA_STATIC: true
          ECA_MUSL: true
        run: |
          bb native-cli

      - name: Compress binary
        uses: svenstaro/upx-action@v2
        with:
          file: eca

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: eca-native
          path: eca

  graalvm-integration-test:
    needs: graalvm-build
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Install clojure build tools
        uses: DeLaGuardo/setup-clojure@master
        with:
          cli: '1.12.0.1530'
          bb: '1.12.200'

      - uses: actions/download-artifact@v4
        name: eca-native

      - name: Setup binary
        run: |
          cp -rf eca-native/eca eca
          chmod +x eca

      - name: Run integration tests
        run: bb integration-test
